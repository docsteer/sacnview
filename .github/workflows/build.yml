# Github Actions configuration file
# Runs the build on Linux, Windows and MacOS
name: Build

on:
  push:
  pull_request:
  page_build:
  release:
    types:
      - created
      - edited
      - prereleased
      - released

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # https://github.com/actions/virtual-environments#available-environments
        os: [ubuntu-20.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-20.04 # Oldest LTS for appimage support
            qt: '6.2.4' # Qt6 LTS
            qt_modules: 'qtmultimedia qtcharts'
            dependencies: |
              sudo apt-get install mesa-common-dev libgl1-mesa-dev libpcap-dev libgstreamer-gl1.0-0 libgstreamer-plugins-base1.0-0 libxkbcommon-x11-0 -y
            installer_setup: |
              sudo gem install --no-document fpm
            artifact: |
              build/src/sACNView

          - os: windows-latest
            qt: '6.2.4' # Qt6 LTS
            qt_modules: 'qtmultimedia qtcharts'
            dependencies : |
              choco install -y winflexbison3
            installer_setup: |
              Invoke-WebRequest -Uri "https://nsis.sourceforge.io/mediawiki/images/e/e0/NSIS_Simple_Firewall_Plugin_Unicode_1.21.zip" -OutFile "NSIS_Simple_Firewall_Plugin_Unicode.zip"
              7z e NSIS_Simple_Firewall_Plugin_Unicode.zip -o"C:\Program Files (x86)\NSIS\Plugins\x86-unicode"
            arch: win32_msvc2019
            artifact: |
              build/src/sACNView.exe
              build/src/sACNView.pdb 

          - os: macos-latest
            qt: '6.2.4' # Qt6 LTS
            qt_modules: 'qtmultimedia qtcharts'
            installer_setup: |
              brew install create-dmg
            xcode: latest-stable
            artifact: 
              build/src/sACNView

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Qt
      uses: jurplel/install-qt-action@v3.1.0
      with:
        version: ${{ matrix.qt }}
        modules: ${{ matrix.qt_modules }}
        aqtversion: '==2.0.0'

    - name: Dependencies
      run: ${{ matrix.dependencies }} 

    - name: Setup Installer
      run: ${{ matrix.installer_setup }}

    - name: Environment Setup (MSVC)
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Environment Setup (Xcode)
      if: runner.os == 'macOS'
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode }}

    - name: Configure Build
      shell: bash
      run: |
        if [[ -n "${Qt5_DIR}" ]]; then export CMAKE_PREFIX_PATH=${Qt5_DIR}; fi
        if [[ -n "${Qt6_DIR}" ]]; then export CMAKE_PREFIX_PATH=${Qt6_DIR}; fi
        cmake -S . -B build -DCMAKE_BUILD_TYPE=Release 

    - name: Build
      run: cmake --build build --config Release

    - name: Upload Artifact(s)
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}
        path: ${{ matrix.artifact }} 
